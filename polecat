#!/bin/sh
# polecat: Portable Containered Application build shell script
#
# Copyright (C) 2015 Masami Hiramatsu <masami.hiramatsu@gmail.com>
# This program is released under the MIT License, see LICENSE.

LIBEXEC=`dirname $0`/libexec
MINCEXEC=$LIBEXEC/minc-exec
MINCCOAT=$LIBEXEC/minc-coat
TRAPPER=$LIBEXEC/minc-trapper
OUTFILE=polecat-out.sh

# Exit if any errors
set -e
set -u

usage() { # [error messages]
  test $# -ne 0 && echo "$*"
  echo "$0 - Build a self-executable containered application"
  echo "Usage: $0 [options] <rootdir> <command>"
  echo " options:"
  echo "    -h or --help           Show this help"
  echo "    -o or --output <FILE>  Output to FILE (default: $OUTFILE)"
  echo "    -s or --script <FILE>  Use FILE as build-script"
  exit $#
}

while [ "$1" ]; do
case $1 in
-h|--help)
  usage
  ;;
-o|--output)
  OUTFILE=$2
  shift 2
  ;;
-s|--script)
  SCRIPT=$2
  shift 2
  ;;
--debug)
  set -x
  export MINC_DEBUG=1
  ;;
*)
  break;
  ;;
esac
done

test -d "$1" || usage "$1 is not a directory"
ROOTFS=$1
shift 1

# Preparing working dir
export MINC_TMPDIR=`mktemp -d polecat-XXXXXXXX`
trap "rm -rf $MINC_TMPDIR" EXIT

# Working sub-directories
export MINC_BASEDIR=$ROOTFS
$MINCCOAT
RD=$MINC_TMPDIR/root
trap "umount $RD; rm -rf $MINC_TMPDIR" EXIT

# At first, install minc libs
mkdir -p $RD/opt/libexec
install -m 755 $MINCCOAT $RD/opt/libexec/
install -m 755 $MINCEXEC $RD/opt/libexec/

# Scripting mode
if [ -f "$SCRIPT" ]; then
  MKDIRS=
  RMDIRS=
  COMMAND=
  . $SCRIPT || usage "Importing error: $SCRIPT"
  cp $SCRIPT $RD/opt/libexec/
  # Build install script
  cat > $RD/install.sh << EOF
#!/bin/sh
set -e
. /opt/libexec/`basename $SCRIPT`
install_command
EOF
  chmod a+x $RD/*.sh
  trap "" INT

  # Install phase
  echo "--- Installation stage ---"
  export MINC_TMPDIR
  export MINC_OPT_SIMPLE=1
  $MINCEXEC /install.sh

  # Testing phase
  echo "--- Testing stage (Press ^C after test run) ---"
  $TRAPPER -r $ROOTFS $MINC_TMPDIR $COMMAND
  trap - INT

  # Note that this could cause directory traversal. Do not shoot your foot.
  echo "--- Preparing files ---"
  UD=$MINC_TMPDIR/storage
  [ "$MKDIRS" ] && for i in $MKDIRS; do mkdir -p $UD/$i; done
  [ "$RMDIRS" ] && for i in $RMDIRS; do rm -rf $UD/$i; done
  rm -f $UD/install.sh

  # Now we can directly use upper directory as root directory.
  RD=$UD
else
  COMMAND="$@"
fi

# Make a squashfs image
SFS=$MINC_TMPDIR/rootfs.sfs
mksquashfs $RD $SFS

SIZE=`stat --format=%s $SFS`
cat > $TMP/polecat.sh << EOF
#!/bin/sh
set -e
SELF=\$0
SIZE=$SIZE
TOTAL=\`stat --format=%s \$SELF\`
OFFS=\$((TOTAL - SIZE))
PLCDIR=\`mktemp -d polecat-run-XXXXXXXX\`
TRAPCMD="rm -rf \$PLCDIR"; trap "\$TRAPCMD" EXIT
export MINC_BASEDIR=\$PLCDIR/rootfs
export MINC_TMPDIR=\$PLCDIR/tmp
export MINC_OPT_SIMPLE=1
mkdir \$MINC_BASEDIR \$MINC_TMPDIR
mount -t squashfs -o ro,loop,offset=\$OFFS \$SELF \$MINC_BASEDIR
TRAPCMD="umount \$MINC_BASEDIR;\$TRAPCMD"; trap "\$TRAPCMD" EXIT
sh \$MINC_BASEDIR/opt/libexec/minc-coat
TRAPCMD="umount \$MINC_TMPDIR/root;\$TRAPCMD"; trap "\$TRAPCMD" EXIT
trap '' INT
sh \$MINC_BASEDIR/opt/libexec/minc-exec $COMMAND
exit \$?
EOF

cat $TMP/polecat.sh $SFS > $OUTFILE
chmod a+x $OUTFILE

exit 0
