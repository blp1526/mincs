#!/bin/sh
# minc-leash: MINC least capability shell
#
# Copyright (C) 2015 Masami Hiramatsu <masami.hiramatsu@gmail.com>
# This program is released under the MIT License, see LICENSE.

set -e
test "$MINC_DEBUG" && set -x

# wash : wash up the given environment variables
wash() { # pattern
  for i in `env | grep $1 | cut -f 1 -d=`; do
    unset $i
  done
}

leash() { # rootdir [commands]
  RD=$1
  shift 1
  if [ "$MINC_DROPCAPS" ]; then
    :
    : 'If we need to drop capabilities, use capsh to run given command'
    if [ "$MINC_USERSPEC" ]; then
      : 'Setup userspec option'
      OPT=`echo $MINC_USERSPEC | \
        awk 'BEGIN{FS=":"} {if (NF==2) print "--gid="$2; print "--uid="$1}'`
    fi
    [ "$CAPSH_EXEC" ] && OPT="$OPT --exec"
    RUN="$MINC_DEBUG_PREFIX capsh --chroot=$RD $OPT --drop=$MINC_DROPCAPS -- "
    if [ -z "$CAPSH_EXEC" ]; then
      : 'If capsh does not support --exec, run it with sh -c '
      wash "^MINC_"
      exec $RUN -c "exec $*"
    fi
  else
    :
    : 'No capability change. Use chroot to run given command in a container'
    test "$MINC_USERSPEC" && OPT="--userspec $MINC_USERSPEC"
    RUN="$MINC_DEBUG_PREFIX chroot $OPT $RD"
  fi
  : 'Wash out the environment variables for MINCS'
  wash "^MINC_"
  : 'Execute given command'
  exec $RUN $@
}

:
: "Check the rootfs, since we can not use pivot_root on initramfs"
mount | grep -q ^"rootfs on / " && export MINC_OPT_SIMPLE=1
if [ "$MINC_OPT_SIMPLE" ]; then
  : 'Without pivot_root, cap_sys_chroot should be dropped if possible.'
  if which capsh > /dev/null 2>&1; then
    MINC_DROPCAPS="$MINC_DROPCAPS,cap_sys_chroot"
  fi
fi
:
: 'Check capsh --exec is supported'
CAPSH_EXEC=
capsh -h | grep -q "^ *--exec" && CAPSH_EXEC=1
if [ "$MINC_DROPCAPS" -a ! -x $RD/bin/bash ]; then
  if capsh -h | grep -q "SHELL" && test -x $RD/bin/sh ; then
    :
    : 'If there is no bash but capsh supported $SHELL, use it as user shell'
    export SHELL=/bin/sh
  else
    :
    : 'We can not run (old) capsh without bash'
    echo "Warning: No /bin/bash found in rootfs, capabilities are not dropped"
    MINC_DROPCAPS=""
  fi
fi

if [ -z "$MINC_OPT_SIMPLE" ]; then
  :
  : 'To unmount all unused mountpoints, use pivot_root to change root'
  cd $RD
  mkdir -p .orig
  pivot_root . .orig
  PATH=/bin:/sbin:/usr/bin:/usr/sbin
  :
  : 'Now old root is under /.orig, make it private and umount all of that'
  mount --make-rprivate /.orig
  umount -l /.orig
  RD=.
fi

if [ `basename $0` = "minc-leash" ]; then
  leash $@
fi
