#!/bin/sh
# minc-core : Pure shell script mini container core script
#
# Copyright (C) 2014,2015 Masami Hiramatsu <masami.hiramatsu@gmail.com>
# This program is released under the MIT License, see LICENSE.

LIBEXEC=`dirname $0`
MINCCAGE=$LIBEXEC/minc-cage
MINCCORE=$LIBEXEC/minc-core

# Exit if any errors
set -e
test "$MINC_DEBUG" && set -x
:
: "Ensure parameters are set"
test "$MINC_BASEDIR"
test -d "$MINC_TMPDIR"

if [ "$MINC_NETNS" ]; then
  : "Setup Network Namespace"
  ip netns add $MINC_NETNS
  TRAPCMD="ip netns del $MINC_NETNS"
  trap "$TRAPCMD" EXIT
  export MINC_NETNSIF=veth0-$MINC_NETNS
  ip link add name $MINC_NETNSIF type veth peer name veth1-$MINC_NETNS
  ip link set $MINC_NETNSIF netns $MINC_NETNS
  IP_NETNS="ip netns exec $MINC_NETNS "
else
  TRAPCMD=
  IP_NETNS=
fi
:
: "Setup CPU limitations by CPUSET"
test "$MINC_CPUMASK" && taskset -ap $MINC_CPUMASK $$ > /dev/null
:
: "Prepare Cgroups if needed"
CAGECMD=`$MINCCAGE --prepare $$`
if [ "$CAGECMD" ]; then
  TRAPCMD="$CAGECMD;$TRAPCMD"
  : 'Setup a "cage" for the container'
  . $MINCCAGE
fi
:
: "Prepare cleanup commands"
trap '' INT
trap "rm -f $MINC_TMPDIR/pid;$TRAPCMD" EXIT
:
: 'Enter new namespace and exec command'
UNSHARE_OPT=
[ "$MINC_NOPRIV" ] && UNSHARE_OPT=--map-root-user
$IP_NETNS unshare $UNSHARE_OPT -iumpf $MINCCORE "$@"
