#!/bin/sh
# minc : Pure shell script mini container command
#
# Copyright (C) 2014,2015 Masami Hiramatsu <masami.hiramatsu@gmail.com>
# This program is released under the MIT License, see LICENSE.
#
# This requires util-linux newer than 2.24 (unshare "-f"
# option and mount correctly support /proc/mounts)

LIBEXEC=`dirname $0`/libexec
MINCEXEC=$LIBEXEC/minc-exec

# Exit if any errors
set -e

usage() { # [error messages]
  test $# -ne 0 && echo "$*"
  echo "$0 - Run given command in a temporary namespace"
  echo "Usage: $0 [options] <command> [argument...]"
  echo " options:"
  echo "    -h or --help        Show this help"
  echo "    -k or --keep        Keep the temporary directory"
  echo "    -t or --tempdir <DIR>  Set DIR for temporary directory (imply -k)"
  echo "    -r or --rootdir <DIR>  Set DIR for original root directory"
  echo "    -X or --X11         Export local X11 unix socket"
  echo "    -n or --net         Use network namespace"
  echo "    -c or --cpu <mask>  Set CPU mask"
  echo "    --debug             Debug mode"
  exit $#
}

KEEPDIR=0
TMPDIR=
NETNS=
CPUMASK=0
export DEBUG=
export ROOTDIR=/
# Parse options
while [ "$1" ]; do
case "$1" in
  --keep|-k) # Keep the temporary directory
    KEEPDIR=1
    shift 1
    ;;
  --tempdir|-t) # Give a temporary directory (imply -k)
    KEEPDIR=1
    export TMPDIR=$2
    test -d "$TMPDIR" || usage "Error: $2 is not a directory"
    shift 2
    ;;
  --rootdir|-r) # Give a rootdir instead of /
    export ROOTDIR=$2
    test -d "$ROOTDIR" || usage "Error: $2 is not a directory"
    shift 2
    ;;
  --X11|-X) # Export X11 connection
    [ -z "$DISPLAY" ] && usage "Error: \$DISPLAY is empty"
    export RWBIND="/tmp/.X11-unix"
    shift 1
    ;;
  --net|-n) # Use NetNS
    NETNS="minc$$"
    shift 1
    ;;
  --cpu|-c) # Use CPU mask
    CPUMASK=$2
    shift 2
    ;;
  --help|-h) # Help Message
    usage
    ;;
  --debug) # Debug mode
    set -x
    export DEBUG=1
    shift 1
    ;;
  [!-]*) # User given command
    break
    ;;
  *)
    usage "Parse error: $1 is not supported."
esac
done

# Setup temporary directory
if [ -z "$TMPDIR" ]; then
  export TMPDIR=`mktemp -d /tmp/minc$$-XXXX`
fi
if [ $KEEPDIR -eq 0 ]; then
  TRAPCMD="rm -rf $TMPDIR"
else
  TRAPCMD="echo Keep $TMPDIR"
fi
trap "$TRAPCMD" EXIT

# Setup Network Namespace
if [ "$NETNS" ]; then
  ip netns add $NETNS
  TRAPCMD="$TRAPCMD;ip netns del $NETNS"
  trap "$TRAPCMD" EXIT
  export NETNSIF=vminc$$
  ip link add name $NETNSIF type veth peer name veth$$
  ip link set $NETNSIF netns $NETNS
fi

$MINCEXEC $@
